import React, { useRef, useState } from "react";
//R3F
import { Canvas, useFrame } from "react-three-fiber";
// Deai - R3F
import { Plane,softShadows, MeshWobbleMaterial, OrbitControls,Line } from "drei";
//Components
import Header from "./components/header";
// Styles
import "./App.scss";
// React Spring
import { useSpring, a } from "react-spring/three";
const datax=[3.49,
 3.4800000000000004,
 3.4700000000000006,
 3.460000000000001,
 3.450000000000001,
 3.4400000000000013,
 3.4300000000000015,
 3.4200000000000017,
 3.410000000000002,
 3.400000000000002,
 3.3900000000000023,
 3.3800000000000026,
 3.3700000000000028,
 3.360000000000003,
 3.350000000000003,
 3.3400000000000034,
 3.3300000000000036,
 3.320000000000004,
 3.310000000000004,
 3.3000000000000043,
 3.2900000000000045,
 3.2800000000000047,
 3.270000000000005,
 3.260000000000005,
 3.2500000000000053,
 3.2400000000000055,
 3.2300000000000058,
 3.220000000000006,
 3.210000000000006,
 3.2000000000000064,
 3.1900000000000066,
 3.180000000000007,
 3.170000000000007,
 3.1600000000000072,
 3.1500000000000075,
 3.1400000000000077,
 3.130000000000008,
 3.120000000000008,
 3.1100000000000083,
 3.1000000000000085,
 3.0900000000000087,
 3.080000000000009,
 3.070000000000009,
 3.0600000000000094,
 3.0500000000000096,
 3.04000000000001,
 3.03000000000001,
 3.0200000000000102,
 3.0100000000000104,
 3.0000000000000107,
 2.990000000000011,
 2.980000000000011,
 2.9700000000000113,
 2.9600000000000115,
 2.9500000000000117,
 2.940000000000012,
 2.930000000000012,
 2.9200000000000124,
 2.9100000000000126,
 2.900000000000013,
 2.890000000000013,
 2.880000000000013,
 2.8700000000000134,
 2.8600000000000136,
 2.850000000000014,
 2.840000000000014,
 2.8300000000000143,
 2.8200000000000145,
 2.8100000000000147,
 2.800000000000015,
 2.790000000000015,
 2.7800000000000153,
 2.7700000000000156,
 2.7600000000000158,
 2.750000000000016,
 2.740000000000016,
 2.7300000000000164,
 2.7200000000000166,
 2.710000000000017,
 2.700000000000017,
 2.6900000000000173,
 2.6800000000000175,
 2.6700000000000177,
 2.660000000000018,
 2.650000000000018,
 2.6400000000000183,
 2.6300000000000185,
 2.6200000000000188,
 2.610000000000019,
 2.600000000000019,
 2.5900000000000194,
 2.5800000000000196,
 2.57000000000002,
 2.56000000000002,
 2.5500000000000203,
 2.5400000000000205,
 2.5300000000000207,
 2.520000000000021,
 2.510000000000021,
 2.5000000000000213,
 2.4900000000000215,
 2.4800000000000217,
 2.470000000000022,
 2.460000000000022,
 2.4500000000000224,
 2.4400000000000226,
 2.430000000000023,
 2.420000000000023,
 2.4100000000000232,
 2.4000000000000234,
 2.3900000000000237,
 2.380000000000024,
 2.370000000000024,
 2.3600000000000243,
 2.3500000000000245,
 2.3400000000000247,
 2.330000000000025,
 2.320000000000025,
 2.3100000000000254,
 2.3000000000000256,
 2.290000000000026,
 2.280000000000026,
 2.270000000000026,
 2.2600000000000264,
 2.2500000000000266,
 2.240000000000027,
 2.230000000000027,
 2.2200000000000273,
 2.2100000000000275,
 2.2000000000000277,
 2.190000000000028,
 2.180000000000028,
 2.1700000000000284,
 2.1600000000000286,
 2.1500000000000288,
 2.140000000000029,
 2.130000000000029,
 2.1200000000000294,
 2.1100000000000296,
 2.10000000000003,
 2.09000000000003,
 2.0800000000000303,
 2.0700000000000305,
 2.0600000000000307,
 2.050000000000031,
 2.040000000000031,
 2.0300000000000313,
 2.0200000000000315,
 2.0100000000000318,
 2.000000000000032,
 1.990000000000032,
 1.980000000000032,
 1.970000000000032,
 1.960000000000032,
 1.950000000000032,
 1.940000000000032,
 1.930000000000032,
 1.920000000000032,
 1.910000000000032,
 1.9000000000000319,
 1.8900000000000319,
 1.8800000000000319,
 1.8700000000000319,
 1.8600000000000319,
 1.8500000000000318,
 1.8400000000000318,
 1.8300000000000318,
 1.8200000000000318,
 1.8100000000000318,
 1.8000000000000318,
 1.7900000000000318,
 1.7800000000000318,
 1.7700000000000318,
 1.7600000000000318,
 1.7500000000000318,
 1.7400000000000317,
 1.7300000000000317,
 1.7200000000000317,
 1.7100000000000317,
 1.7000000000000317,
 1.6900000000000317,
 1.6800000000000317,
 1.6700000000000317,
 1.6600000000000317,
 1.6500000000000317,
 1.6400000000000317,
 1.6300000000000316,
 1.6200000000000316,
 1.6100000000000316,
 1.6000000000000316,
 1.5900000000000316,
 1.5800000000000316,
 1.5700000000000316,
 1.5600000000000316,
 1.5500000000000316,
 1.5400000000000316,
 1.5300000000000316,
 1.5200000000000315,
 1.5100000000000315,
 1.5000000000000315,
 1.4900000000000315,
 1.4800000000000315,
 1.4700000000000315,
 1.4600000000000315,
 1.4500000000000315,
 1.4400000000000315,
 1.4300000000000315,
 1.4200000000000315,
 1.4100000000000315,
 1.4000000000000314,
 1.3900000000000314,
 1.3800000000000314,
 1.3700000000000314,
 1.3600000000000314,
 1.3500000000000314,
 1.3400000000000314,
 1.3300000000000314,
 1.3200000000000314,
 1.3100000000000314,
 1.3000000000000314,
 1.2900000000000313,
 1.2800000000000313,
 1.2700000000000313,
 1.2600000000000313,
 1.2500000000000313,
 1.2400000000000313,
 1.2300000000000313,
 1.2200000000000313,
 1.2100000000000313,
 1.2000000000000313,
 1.1900000000000313,
 1.1800000000000312,
 1.1700000000000312,
 1.1600000000000312,
 1.1500000000000312,
 1.1400000000000312,
 1.1300000000000312,
 1.1200000000000312,
 1.1100000000000312,
 1.1000000000000312,
 1.0900000000000312,
 1.0800000000000312,
 1.0700000000000311,
 1.0600000000000311,
 1.0500000000000311,
 1.0400000000000311,
 1.0300000000000311,
 1.020000000000031,
 1.010000000000031,
 1.000000000000031,
 0.9900000000000311,
 0.9800000000000311,
 0.9700000000000311,
 0.960000000000031,
 0.950000000000031,
 0.940000000000031,
 0.930000000000031,
 0.920000000000031,
 0.910000000000031,
 0.900000000000031,
 0.890000000000031,
 0.880000000000031,
 0.870000000000031,
 0.860000000000031,
 0.850000000000031,
 0.8400000000000309,
 0.8300000000000309,
 0.8200000000000309,
 0.8100000000000309,
 0.8000000000000309,
 0.7900000000000309,
 0.7800000000000309,
 0.7700000000000309,
 0.7600000000000309,
 0.7500000000000309,
 0.7400000000000309,
 0.7300000000000308,
 0.7200000000000308,
 0.7100000000000308,
 0.7000000000000308,
 0.6900000000000308,
 0.6800000000000308,
 0.6700000000000308,
 0.6600000000000308,
 0.6500000000000308,
 0.6400000000000308,
 0.6300000000000308,
 0.6200000000000307,
 0.6100000000000307,
 0.6000000000000307,
 0.5900000000000307,
 0.5800000000000307,
 0.5700000000000307,
 0.5600000000000307,
 0.5500000000000307,
 0.5400000000000307,
 0.5300000000000307,
 0.5200000000000307,
 0.5100000000000307,
 0.5000000000000306,
 0.49000000000003063,
 0.4800000000000306,
 0.4700000000000306,
 0.4600000000000306,
 0.4500000000000306,
 0.4400000000000306,
 0.4300000000000306,
 0.42000000000003057,
 0.41000000000003056,
 0.40000000000003055,
 0.39000000000003054,
 0.38000000000003054,
 0.3700000000000305,
 0.3600000000000305,
 0.3500000000000305,
 0.3400000000000305,
 0.3300000000000305,
 0.3200000000000305,
 0.3100000000000305,
 0.30000000000003046,
 0.29000000000003046,
 0.28000000000003045,
 0.27000000000003044,
 0.26000000000003043,
 0.2500000000000304,
 0.2400000000000304,
 0.2300000000000304,
 0.2200000000000304,
 0.21000000000003038,
 0.20000000000003038,
 0.19000000000003037,
 0.18000000000003036,
 0.17000000000003035,
 0.16000000000003034,
 0.15000000000003033,
 0.14000000000003032,
 0.1300000000000303,
 0.12000000000003032,
 0.11000000000003032,
 0.10000000000003033,
 0.09000000000003033,
 0.08000000000003034,
 0.07000000000003034,
 0.06000000000003034,
 0.05000000000003034,
 0.04000000000003034,
 0.030000000000030336,
 0.020000000000030334,
 0.010000000000030334,
 3.033337470093045e-14,
 -0.009999999999969667,
 -0.019999999999969667,
 -0.02999999999996967,
 -0.03999999999996967,
 -0.04999999999996967,
 -0.059999999999969675,
 -0.06999999999996967,
 -0.07999999999996966,
 -0.08999999999996966,
 -0.09999999999996965,
 -0.10999999999996965,
 -0.11999999999996964,
 -0.12999999999996964,
 -0.13999999999996965,
 -0.14999999999996966,
 -0.15999999999996967,
 -0.16999999999996968,
 -0.17999999999996968,
 -0.1899999999999697,
 -0.1999999999999697,
 -0.2099999999999697,
 -0.21999999999996972,
 -0.22999999999996973,
 -0.23999999999996974,
 -0.24999999999996975,
 -0.25999999999996976,
 -0.26999999999996976,
 -0.2799999999999698,
 -0.2899999999999698,
 -0.2999999999999698,
 -0.3099999999999698,
 -0.3199999999999698,
 -0.3299999999999698,
 -0.3399999999999698,
 -0.34999999999996984,
 -0.35999999999996984,
 -0.36999999999996985,
 -0.37999999999996986,
 -0.38999999999996987,
 -0.3999999999999699,
 -0.4099999999999699,
 -0.4199999999999699,
 -0.4299999999999699,
 -0.4399999999999699,
 -0.4499999999999699,
 -0.45999999999996993,
 -0.46999999999996994,
 -0.47999999999996995,
 -0.48999999999996996,
 -0.49999999999996997,
 -0.5099999999999699,
 -0.5199999999999699,
 -0.5299999999999699,
 -0.53999999999997,
 -0.54999999999997,
 -0.55999999999997,
 -0.56999999999997,
 -0.57999999999997,
 -0.58999999999997,
 -0.59999999999997,
 -0.60999999999997,
 -0.61999999999997,
 -0.62999999999997,
 -0.63999999999997,
 -0.64999999999997,
 -0.65999999999997,
 -0.6699999999999701,
 -0.6799999999999701,
 -0.6899999999999701,
 -0.6999999999999701,
 -0.7099999999999701,
 -0.7199999999999701,
 -0.7299999999999701,
 -0.7399999999999701,
 -0.7499999999999701,
 -0.7599999999999701,
 -0.7699999999999702,
 -0.7799999999999702,
 -0.7899999999999702,
 -0.7999999999999702,
 -0.8099999999999702,
 -0.8199999999999702,
 -0.8299999999999702,
 -0.8399999999999702,
 -0.8499999999999702,
 -0.8599999999999702,
 -0.8699999999999702,
 -0.8799999999999703,
 -0.8899999999999703,
 -0.8999999999999703,
 -0.9099999999999703,
 -0.9199999999999703,
 -0.9299999999999703,
 -0.9399999999999703,
 -0.9499999999999703,
 -0.9599999999999703,
 -0.9699999999999703,
 -0.9799999999999703,
 -0.9899999999999703,
 -0.9999999999999704,
 -1.0099999999999703,
 -1.0199999999999703,
 -1.0299999999999703,
 -1.0399999999999703,
 -1.0499999999999703,
 -1.0599999999999703,
 -1.0699999999999703,
 -1.0799999999999703,
 -1.0899999999999703,
 -1.0999999999999703,
 -1.1099999999999703,
 -1.1199999999999704,
 -1.1299999999999704,
 -1.1399999999999704,
 -1.1499999999999704,
 -1.1599999999999704,
 -1.1699999999999704,
 -1.1799999999999704,
 -1.1899999999999704,
 -1.1999999999999704,
 -1.2099999999999704,
 -1.2199999999999704,
 -1.2299999999999705,
 -1.2399999999999705,
 -1.2499999999999705,
 -1.2599999999999705,
 -1.2699999999999705,
 -1.2799999999999705,
 -1.2899999999999705,
 -1.2999999999999705,
 -1.3099999999999705,
 -1.3199999999999705,
 -1.3299999999999705,
 -1.3399999999999705,
 -1.3499999999999706,
 -1.3599999999999706,
 -1.3699999999999706,
 -1.3799999999999706,
 -1.3899999999999706,
 -1.3999999999999706,
 -1.4099999999999706,
 -1.4199999999999706,
 -1.4299999999999706,
 -1.4399999999999706,
 -1.4499999999999706,
 -1.4599999999999707,
 -1.4699999999999707,
 -1.4799999999999707,
 -1.4899999999999707,
 -1.4999999999999707,
 -1.5099999999999707,
 -1.5199999999999707,
 -1.5299999999999707,
 -1.5399999999999707,
 -1.5499999999999707,
 -1.5599999999999707,
 -1.5699999999999708,
 -1.5799999999999708,
 -1.5899999999999708,
 -1.5999999999999708,
 -1.6099999999999708,
 -1.6199999999999708,
 -1.6299999999999708,
 -1.6399999999999708,
 -1.6499999999999708,
 -1.6599999999999708,
 -1.6699999999999708,
 -1.6799999999999708,
 -1.6899999999999709,
 -1.6999999999999709,
 -1.7099999999999709,
 -1.7199999999999709,
 -1.729999999999971,
 -1.739999999999971,
 -1.749999999999971,
 -1.759999999999971,
 -1.769999999999971,
 -1.779999999999971,
 -1.789999999999971,
 -1.799999999999971,
 -1.809999999999971,
 -1.819999999999971,
 -1.829999999999971,
 -1.839999999999971,
 -1.849999999999971,
 -1.859999999999971,
 -1.869999999999971,
 -1.879999999999971,
 -1.889999999999971,
 -1.899999999999971,
 -1.909999999999971,
 -1.919999999999971,
 -1.929999999999971,
 -1.939999999999971,
 -1.949999999999971,
 -1.959999999999971,
 -1.969999999999971,
 -1.9799999999999711,
 -1.9899999999999711,
 -1.9999999999999711,
 -2.009999999999971,
 -2.0199999999999707,
 -2.0299999999999705,
 -2.0399999999999703,
 -2.04999999999997,
 -2.05999999999997,
 -2.0699999999999696,
 -2.0799999999999694,
 -2.089999999999969,
 -2.099999999999969,
 -2.109999999999969,
 -2.1199999999999686,
 -2.1299999999999684,
 -2.139999999999968,
 -2.149999999999968,
 -2.1599999999999677,
 -2.1699999999999675,
 -2.1799999999999673,
 -2.189999999999967,
 -2.199999999999967,
 -2.2099999999999667,
 -2.2199999999999664,
 -2.2299999999999662,
 -2.239999999999966,
 -2.249999999999966,
 -2.2599999999999656,
 -2.2699999999999654,
 -2.279999999999965,
 -2.289999999999965,
 -2.2999999999999647,
 -2.3099999999999645,
 -2.3199999999999643,
 -2.329999999999964,
 -2.339999999999964,
 -2.3499999999999637,
 -2.3599999999999635,
 -2.3699999999999632,
 -2.379999999999963,
 -2.389999999999963,
 -2.3999999999999626,
 -2.4099999999999624,
 -2.419999999999962,
 -2.429999999999962,
 -2.4399999999999618,
 -2.4499999999999615,
 -2.4599999999999613,
 -2.469999999999961,
 -2.479999999999961,
 -2.4899999999999607,
 -2.4999999999999605,
 -2.5099999999999603,
 -2.51999999999996,
 -2.52999999999996,
 -2.5399999999999596,
 -2.5499999999999594,
 -2.559999999999959,
 -2.569999999999959,
 -2.5799999999999588,
 -2.5899999999999586,
 -2.5999999999999583,
 -2.609999999999958,
 -2.619999999999958,
 -2.6299999999999577,
 -2.6399999999999575,
 -2.6499999999999573,
 -2.659999999999957,
 -2.669999999999957,
 -2.6799999999999566,
 -2.6899999999999564,
 -2.699999999999956,
 -2.709999999999956,
 -2.719999999999956,
 -2.7299999999999556,
 -2.7399999999999554,
 -2.749999999999955,
 -2.759999999999955,
 -2.7699999999999547,
 -2.7799999999999545,
 -2.7899999999999543,
 -2.799999999999954,
 -2.809999999999954,
 -2.8199999999999537,
 -2.8299999999999534,
 -2.8399999999999532,
 -2.849999999999953,
 -2.859999999999953,
 -2.8699999999999526,
 -2.8799999999999524,
 -2.889999999999952,
 -2.899999999999952,
 -2.9099999999999517,
 -2.9199999999999515,
 -2.9299999999999513,
 -2.939999999999951,
 -2.949999999999951,
 -2.9599999999999507,
 -2.9699999999999505,
 -2.9799999999999502,
 -2.98999999999995,
 -2.99999999999995,
 -3.0099999999999496,
 -3.0199999999999494,
 -3.029999999999949,
 -3.039999999999949,
 -3.0499999999999488,
 -3.0599999999999485,
 -3.0699999999999483,
 -3.079999999999948,
 -3.089999999999948,
 -3.0999999999999477,
 -3.1099999999999475,
 -3.1199999999999473,
 -3.129999999999947,
 -3.139999999999947,
 -3.1499999999999466,
 -3.1599999999999464,
 -3.169999999999946,
 -3.179999999999946,
 -3.1899999999999458,
 -3.1999999999999456,
 -3.2099999999999453,
 -3.219999999999945,
 -3.229999999999945,
 -3.2399999999999447,
 -3.2499999999999445,
 -3.2599999999999443,
 -3.269999999999944,
 -3.279999999999944,
 -3.2899999999999436,
 -3.2999999999999434,
 -3.309999999999943,
 -3.319999999999943,
 -3.329999999999943,
 -3.3399999999999426,
 -3.3499999999999424,
 -3.359999999999942,
 -3.369999999999942,
 -3.3799999999999417,
 -3.3899999999999415,
 -3.3999999999999413,
 -3.409999999999941,
 -3.419999999999941,
 -3.4299999999999407,
 -3.4399999999999404,
 -3.4499999999999402,
 -3.45999999999994,
 -3.46999999999994,
 -3.4799999999999396,
 -3.4899999999999394,
 -3.499999999999939,
 -3.509999999999939]
// soft Shadows
softShadows();
const data=[]
const SpinningMesh = ({ position, color, speed, args }) => {
  //ref to target the mesh
  const mesh = useRef();

  //useFrame allows us to re-render/update rotation on each frame
  useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01));

  //Basic expand state
  const [expand, setExpand] = useState(false);
  // React spring expand animation
  const props = useSpring({
    scale: expand ? [1.4, 1.4, 1.4] : [1, 1, 1],
  });
  return (
    <a.mesh
      position={position}
      ref={mesh}
      onClick={() => setExpand(!expand)}
      scale={props.scale}>
      <boxBufferGeometry attach='geometry' args={args} />
      <MeshWobbleMaterial
        color={color}
        speed={speed}
        attach='material'
        factor={0.6}
      />
    </a.mesh>
  );
};

const App = () => {
  const [count,setCount]=useState(0);
  const Dcount=(point)=>{
    if(count==0){
      setCount(1);
    }
    else{
      setCount(0);
    }
  }
  return (
    <>
      <Canvas
        colorManagement
        shadowMap
        camera={{ position: [20, 50, 0], fov: -20 }}>
        {/* This light makes things look pretty */}
        <ambientLight intensity={0.3} />
        {/* Our main source of light, also casting our shadow */}
        <directionalLight
          position={[10, 10, 10]}
          intensity={1.5}
        />
        <group>
          {/* This mesh is the plane (The floor) */}
          <mesh
            rotation={[-Math.PI / 2, 0, 0]}
            position={[10, 10, 10]}
            onClick={(event) => Dcount(event)}
            // onPointerOver={(event) => alert("true")}
            // onPointerOut={(event) => alert("false")}>
            receiveShadow>
            <planeBufferGeometry attach='geometry' args={[100, 100]} />
            <shadowMaterial attach='material' opacity={0.3} />
          </mesh>
          
          <Line points={[[5, 0, -5],[5,0,5]]} color="black" lineWidth={0.1} dashed={false}/>
          <Line points={[[4, 0, -5],[4,0,5]]} color="black" lineWidth={0.1} dashed={false}/>
          <Line points={[[3, 0, -5],[3,0,5]]} color="black" lineWidth={0.1} dashed={false}/>
          <Line points={[[2, 0, -5],[2,0,5]]} color="black" lineWidth={0.1} dashed={false}/>
          <Line points={[[1, 0, -5],[1,0,5]]} color="black" lineWidth={0.1} dashed={false}/>
          <Line points={[[0, 0, -5],[0,0,5]]} color="black" lineWidth={0.1} dashed={false}/>
          <Line points={[[-1, 0, -5],[-1,0,5]]} color="black" lineWidth={0.1} dashed={false}/>
          <Line points={[[-2, 0, -5],[-2,0,5]]} color="black" lineWidth={0.1} dashed={false}/>
          <Line points={[[-3, 0, -5],[-3,0,5]]} color="black" lineWidth={0.2} dashed={false}/>
          <Line points={[[-4, 0, -5],[-4,0,5]]} color="black" lineWidth={0.2} dashed={false}/>
          <Line points={[[-5, 0, -5],[-5,0,5]]} color="black" lineWidth={0.01} dashed={false}/>
           
          <Line points={[[-5, 0, -5],[5,0,-5]]} color="black" lineWidth={0.1} dashed={false}/>
          <Line points={[[-5, 0, -4],[5,0,-4]]} color="black" lineWidth={0.1} dashed={false}/>
          <Line points={[[-5, 0, -3],[5,0,-3]]} color="black" lineWidth={0.1} dashed={false}/>
          <Line points={[[-5, 0, -2],[5,0,-2]]} color="black" lineWidth={0.1} dashed={false}/>
          <Line points={[[-5, 0, -1],[5,0,-1]]} color="black" lineWidth={0.1} dashed={false}/>
          <Line points={[[-5, 0, 0],[5,0,0]]} color="black" lineWidth={0.1} dashed={false}/>
          <Line points={[[-5, 0, 1],[5,0,1]]} color="black" lineWidth={0.1} dashed={false}/>
          <Line points={[[-5, 0, 2],[5,0,2]]} color="black" lineWidth={0.1} dashed={false}/>
          <Line points={[[-5, 0, 3],[5,0,3]]} color="black" lineWidth={0.1} dashed={false}/>
          <Line points={[[-5, 0, 4],[5,0,4]]} color="black" lineWidth={0.1} dashed={false}/>
          <Line points={[[-5, 0, 5],[5,0,5]]} color="black" lineWidth={0.1} dashed={false}/>
          

           <Line points={[[-3.5, -1, -4.5],[-3.5,-1,4.5]]} color="red" lineWidth={3} dashed={false}/>
           <Line points={[[-3.5, -1, 4.5],[3.5,-1,4.5]]} color="red" lineWidth={3} dashed={false}/>
           <Line points={[[3.5, -1, -4.5],[3.5,-1,4.5]]} color="red" lineWidth={3} dashed={false}/>
           <Line points={[[3.5, -1, -4.5],[-3.5,-1,-4.5]]} color="red" lineWidth={3} dashed={false}/>
         

         {count==1?<group>
         
          {
            datax.map((item)=>
            {
              return(
              <Line points={[[item, -1, -4.5],[item,-1,4.5]]} color="orange" lineWidth={10} dashed={false}/>
            )
            }
            )
          }         
           </group>
:null}

          </group>
        {/* Allows us to move the canvas around for different prespectives */}
        <OrbitControls />
      </Canvas>
    </>
  );
};

export default App;
